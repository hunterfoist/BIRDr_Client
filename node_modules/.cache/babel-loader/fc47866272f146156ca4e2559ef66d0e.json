{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BirdEdit = props => {\n  _s();\n\n  const [editSpecies, setEditSpecies] = useState(props.birdToUpdate.description);\n  const [editLocation, setEditLocation] = useState(props.birdToUpdate.definition);\n  const [editTime, setEditTime] = useState(props.birdToUpdate.result);\n  const [editDate, setEditDate] = useState(props.birdToUpdate.result);\n  const [editRarity, setEditRarity] = useState(props.birdToUpdate.result);\n  const [editSecret, setEditSecret] = useState(props.birdToUpdate.result);\n\n  const handleSubmit = (event, bird) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/log/updatelog/${props.birdToUpdate.id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({\n        log: {\n          species: editSpecies,\n          location: editLocation,\n          time: editTime,\n          date: editDate,\n          rarity: editRarity,\n          secret: editSecret\n        }\n      })\n    }).then(response => {\n      props.fetchBirds();\n      props.updateOff();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: true,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: \"Log a Workout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"Species\",\n              name: \"species\",\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              onChange: e => setEditSpecies(e.target.value),\n              value: editSpecies,\n              id: \"species\",\n              label: \"Species\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"location\",\n              label: \"Location\",\n              onChange: e => setEditLocation(e.target.value),\n              value: editLocation,\n              name: \"location\",\n              autoComplete: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"date\",\n              label: \"Date\",\n              onChange: e => setEditDate(e.target.value),\n              name: \"date\",\n              value: editDate,\n              autoComplete: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"time\",\n              onChange: e => setEditTime(e.target.value),\n              value: editTime,\n              label: \"Time\",\n              id: \"time\",\n              autoComplete: \"time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"rarity\",\n              onChange: e => setEditRarity(e.target.value),\n              value: editRarity,\n              label: \"Rarity\",\n              id: \"rarity\",\n              autoComplete: \"rarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"secret\",\n              onChange: e => setEditSecret(e.target.value),\n              value: editSecret,\n              label: \"Secret\",\n              id: \"secret\",\n              autoComplete: \"secret\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: handleSubmit,\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Create Log!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BirdEdit, \"/Gb27+k2SBfGG20s90Cq58OlgtQ=\");\n\n_c = BirdEdit;\nexport default BirdEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdEdit\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdEdit.jsx"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","makeStyles","Container","BirdEdit","props","editSpecies","setEditSpecies","birdToUpdate","description","editLocation","setEditLocation","definition","editTime","setEditTime","result","editDate","setEditDate","editRarity","setEditRarity","editSecret","setEditSecret","handleSubmit","event","bird","preventDefault","fetch","id","method","headers","Headers","token","body","JSON","stringify","log","species","location","time","date","rarity","secret","then","response","fetchBirds","updateOff","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst BirdEdit = props => {\n\n  const [ editSpecies, setEditSpecies ] = useState(props.birdToUpdate.description);\n  const [ editLocation, setEditLocation ] = useState(props.birdToUpdate.definition);\n  const [ editTime, setEditTime ] = useState(props.birdToUpdate.result);\n\n  const [ editDate, setEditDate ] = useState(props.birdToUpdate.result);\n  const [ editRarity, setEditRarity ] = useState(props.birdToUpdate.result);\n  const [ editSecret, setEditSecret ] = useState(props.birdToUpdate.result);\n\n  const handleSubmit = (event, bird) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/log/updatelog/${props.birdToUpdate.id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({log: { species: editSpecies, location: editLocation, time: editTime, date: editDate, rarity: editRarity, secret: editSecret }})\n    })\n    .then(response => {\n      props.fetchBirds();\n      props.updateOff();\n    })\n  };\n\n  return(\n    <Modal isOpen={true}>\n    <ModalHeader>Log a Workout</ModalHeader>\n    <ModalBody>\n    <Container>\n    <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"Species\"\n                name=\"species\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                \n                onChange={(e) => setEditSpecies(e.target.value)}\n                value={editSpecies}\n                id=\"species\"\n                label=\"Species\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"location\"\n                label=\"Location\"\n                onChange={(e) => setEditLocation(e.target.value)}\n                value={editLocation}\n                name=\"location\"\n                autoComplete=\"location\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                label=\"Date\"\n                onChange={(e) => setEditDate(e.target.value)}\n                name='date'\n                value={editDate}\n                autoComplete=\"date\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"time\"\n                onChange={(e) => setEditTime(e.target.value)}\n                value={editTime}\n                label=\"Time\"\n                id=\"time\"\n                autoComplete=\"time\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"rarity\"\n                onChange={(e) => setEditRarity(e.target.value)}\n                value={editRarity}\n                label=\"Rarity\"\n                id=\"rarity\"\n                autoComplete=\"rarity\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"secret\"\n                onChange={(e) => setEditSecret(e.target.value)}\n                value={editSecret}\n                label=\"Secret\"\n                id=\"secret\"\n                autoComplete=\"secret\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            onClick={handleSubmit}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"          >\n            Create Log!\n          </Button>\n    </Container>\n    </ModalBody>\n        </Modal>\n     );\n};\n\nexport default BirdEdit;"]},"metadata":{},"sourceType":"module"}