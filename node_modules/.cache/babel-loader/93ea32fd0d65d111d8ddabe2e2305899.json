{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { FormControlLabel } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport imageUpload from './BirdImageUpload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BirdCreate = props => {\n  _s();\n\n  const [species, setSpecies] = useState('');\n  const [location, setLocation] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [rarity, setRarity] = useState('');\n  const [image_url, setImage_url] = useState('');\n  const [secret, setSecret] = useState('false');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch('http://localhost:3000/log/createlog', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({\n        log: {\n          species: species,\n          location: location,\n          date: date,\n          time: time,\n          rarity: rarity,\n          image_url: image_url,\n          secret: secret\n        }\n      })\n    }).then(response => response.json()).then(logData => {\n      console.table(logData);\n      setSpecies('');\n      setLocation('');\n      setDate('');\n      setTime('');\n      setRarity('');\n      setImage_url('');\n      setSecret('');\n      props.fetchBirds();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create an Entry!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"Species\",\n            name: \"species\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            onChange: e => setSpecies(e.target.value),\n            value: species,\n            id: \"species\",\n            label: \"Species\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"location\",\n            label: \"Location\",\n            onChange: e => setLocation(e.target.value),\n            value: location,\n            name: \"location\",\n            autoComplete: \"location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"date\",\n            label: \"Date\",\n            type: \"date\",\n            InputLabelProps: {\n              shrink: true\n            },\n            onChange: e => setDate(e.target.value),\n            name: \"date\",\n            value: date,\n            autoComplete: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"time\",\n            type: \"time\",\n            InputLabelProps: {\n              shrink: true\n            },\n            inputProps: {\n              step: 300 // 5 min\n\n            },\n            onChange: e => setTime(e.target.value),\n            value: time,\n            label: \"Time\",\n            id: \"time\",\n            autoComplete: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"rarity\",\n            onChange: e => setRarity(e.target.value),\n            value: rarity,\n            label: \"Rarity\",\n            id: \"rarity\",\n            autoComplete: \"rarity\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 1,\n              children: \"Common\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 2,\n              children: \"Uncommon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 3,\n              children: \"Rare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 4,\n              children: \"Very Rare\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 5,\n              children: \"Legendary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"upload-photo\",\n            type: \"file\",\n            onChange: e => setImage_url(e.target.value),\n            value: image_url // label=\"Image\"\n            ,\n            id: \"image\",\n            autoComplete: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"secret\",\n            onChange: e => setSecret(e.target.value),\n            value: secret,\n            label: \"Would you like this entry to be private?\",\n            id: \"secret\",\n            autoComplete: \"secret\",\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: \"Yes\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Create Log!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BirdCreate, \"kuLtg5/w8gagy5v8OL0rAcq+eNI=\");\n\n_c = BirdCreate;\nexport default BirdCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdCreate\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdCreate.jsx"],"names":["React","useState","Button","TextField","Grid","Box","Typography","Container","FormControlLabel","Checkbox","Select","MenuItem","imageUpload","BirdCreate","props","species","setSpecies","location","setLocation","date","setDate","time","setTime","rarity","setRarity","image_url","setImage_url","secret","setSecret","handleSubmit","event","preventDefault","fetch","method","headers","Headers","token","body","JSON","stringify","log","then","response","json","logData","console","table","fetchBirds","e","target","value","shrink","step"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { FormControlLabel } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport imageUpload from './BirdImageUpload'\n\nconst BirdCreate = props => {\n  const [ species, setSpecies ] = useState('');\n  const [ location, setLocation ] = useState('');\n  const [ date, setDate ] = useState('');\n  const [ time, setTime ] = useState('');\n  const [ rarity, setRarity ] = useState('');\n  const [ image_url, setImage_url] = useState('');\n  const [ secret, setSecret ] = useState('false');\n\n\n\n\n  \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch('http://localhost:3000/log/createlog', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({ log: { species: species, location: location, date: date, time: time, rarity: rarity, image_url: image_url, secret: secret } })\n    })\n    .then(response => response.json())\n    .then(logData => {\n      console.table(logData);\n      setSpecies('');\n      setLocation('');\n      setDate('');\n      setTime('');\n      setRarity('');\n      setImage_url('');\n      setSecret('');\n      props.fetchBirds();\n    })\n  }\n\n  return(\n    <>\n    <h3>Create an Entry!</h3>\n    <Container>\n    <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"Species\"\n                name=\"species\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                \n                onChange={(e) => setSpecies(e.target.value)}\n                value={species}\n                id=\"species\"\n                label=\"Species\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"location\"\n                label=\"Location\"\n                onChange={(e) => setLocation(e.target.value)}\n                value={location}\n                name=\"location\"\n                autoComplete=\"location\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                label=\"Date\"\n                type=\"date\"\n                InputLabelProps={{\n                shrink: true,\n                }}\n                onChange={(e) => setDate(e.target.value)}\n                name='date'\n                value={date}\n                autoComplete=\"date\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"time\"\n                type=\"time\"\n                InputLabelProps={{\n                shrink: true,\n                }}\n                inputProps={{\n                step: 300, // 5 min\n                }}\n                onChange={(e) => setTime(e.target.value)}\n                value={time}\n                label=\"Time\"\n                id=\"time\"\n                autoComplete=\"time\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"rarity\"\n                onChange={(e) => setRarity(e.target.value)}\n                value={rarity}\n                label=\"Rarity\"\n                id=\"rarity\"\n                autoComplete=\"rarity\"\n                >\n                  <MenuItem value={1}>Common</MenuItem>\n                  <MenuItem value={2}>Uncommon</MenuItem>\n                  <MenuItem value={3}>Rare</MenuItem>\n                  <MenuItem value={4}>Very Rare</MenuItem>\n                  <MenuItem value={5}>Legendary</MenuItem>\n                </Select>\n             \n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"upload-photo\"\n                type=\"file\"\n                onChange={(e) => setImage_url(e.target.value)}\n                value={image_url}\n                // label=\"Image\"\n                id=\"image\"\n                autoComplete=\"image\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"secret\"\n                onChange={(e) => setSecret(e.target.value)}\n                value={secret}\n                label=\"Would you like this entry to be private?\"\n                id=\"secret\"\n                autoComplete=\"secret\"\n                control={<Checkbox value=\"Yes\" color=\"primary\" />}\n          />  \n            </Grid>\n            \n          </Grid>\n          <Button\n            type=\"submit\"\n            onClick={handleSubmit}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Create Log!\n          </Button>\n    </Container>\n    </>\n  );\n};\nexport default BirdCreate;"]},"metadata":{},"sourceType":"module"}