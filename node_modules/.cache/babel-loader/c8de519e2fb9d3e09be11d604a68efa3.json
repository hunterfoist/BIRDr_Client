{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BirdEdit = props => {\n  _s();\n\n  const [editSpecies, setEditSpecies] = useState(props.birdToUpdate.species);\n  const [editLocation, setEditLocation] = useState(props.birdToUpdate.location);\n  const [editTime, setEditTime] = useState(props.birdToUpdate.time);\n  const [editDate, setEditDate] = useState(props.birdToUpdate.date);\n  const [editRarity, setEditRarity] = useState(props.birdToUpdate.rarity);\n  const [editSecret, setEditSecret] = useState(props.birdToUpdate.secret);\n  console.log('Hello from edit');\n\n  const handleSubmit = (event, bird) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/log/updatelog/${props.birdToUpdate.id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({\n        log: {\n          species: editSpecies,\n          location: editLocation,\n          time: editTime,\n          date: editDate,\n          rarity: editRarity,\n          secret: editSecret\n        }\n      })\n    }).then(response => response.json()).then(logData => {\n      console.table(logData);\n      setEditSpecies('');\n      setEditLocation('');\n      setEditDate('');\n      setEditTime('');\n      setEditRarity('');\n      setEditSecret('');\n      props.fetchBirds();\n    });\n    props.updateOff();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.updateOn,\n    onClose: props.updateOff,\n    \"aria-labelledby\": \"form-dialog-title\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"form-dialog-title\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"I want to update the birdy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"Species\",\n              name: \"species\",\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              onChange: e => setEditSpecies(e.target.value),\n              value: editSpecies,\n              id: \"species\",\n              label: \"Species\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"location\",\n              label: \"Location\",\n              onChange: e => setEditLocation(e.target.value),\n              value: editLocation,\n              name: \"location\",\n              autoComplete: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"date\",\n              label: \"Date\",\n              type: \"date\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onChange: e => setEditDate(e.target.value),\n              name: \"date\",\n              value: editDate,\n              autoComplete: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"time\",\n              type: \"time\",\n              InputLabelProps: {\n                shrink: true\n              },\n              inputProps: {\n                step: 300 // 5 min\n\n              },\n              onChange: e => setEditTime(e.target.value),\n              value: editTime,\n              label: \"Time\",\n              id: \"time\",\n              autoComplete: \"time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"rarity\",\n              onChange: e => setEditRarity(e.target.value),\n              value: editRarity,\n              label: \"Rarity\",\n              id: \"rarity\",\n              autoComplete: \"rarity\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 1,\n                children: \"Common\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 2,\n                children: \"Uncommon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 3,\n                children: \"Rare\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 4,\n                children: \"Very Rare\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 5,\n                children: \"Legendary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"secret\",\n              onChange: e => setEditSecret(e.target.value),\n              value: editSecret,\n              label: \"Would you like this entry to be private?\",\n              id: \"secret\",\n              autoComplete: \"secret\",\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"Yes\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        color: \"primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BirdEdit, \"wt7A+VA4VPd5zi6UMM2LIWtSQ+4=\");\n\n_c = BirdEdit;\nexport default BirdEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdEdit\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdEdit.jsx"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","Typography","makeStyles","Container","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Select","MenuItem","BirdEdit","props","editSpecies","setEditSpecies","birdToUpdate","species","editLocation","setEditLocation","location","editTime","setEditTime","time","editDate","setEditDate","date","editRarity","setEditRarity","rarity","editSecret","setEditSecret","secret","console","log","handleSubmit","event","bird","preventDefault","fetch","id","method","headers","Headers","token","body","JSON","stringify","then","response","json","logData","table","fetchBirds","updateOff","updateOn","e","target","value","shrink","step"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\n\n\n\nconst BirdEdit = props => {\n\n  const [ editSpecies, setEditSpecies ] = useState(props.birdToUpdate.species);\n  const [ editLocation, setEditLocation ] = useState(props.birdToUpdate.location);\n  const [ editTime, setEditTime ] = useState(props.birdToUpdate.time);\n  const [ editDate, setEditDate ] = useState(props.birdToUpdate.date);\n  const [ editRarity, setEditRarity ] = useState(props.birdToUpdate.rarity);\n  const [ editSecret, setEditSecret ] = useState(props.birdToUpdate.secret);\nconsole.log('Hello from edit')\n\n  const handleSubmit = (event, bird) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/log/updatelog/${props.birdToUpdate.id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({log: { species: editSpecies, location: editLocation, time: editTime, date: editDate, rarity: editRarity, secret: editSecret }})\n    })\n    .then(response => response.json())\n    .then(logData => {\n      console.table(logData);\n      setEditSpecies('');\n      setEditLocation('');\n      setEditDate('');\n      setEditTime('');\n      setEditRarity('');\n      setEditSecret('');\n      props.fetchBirds();\n    })\n      props.updateOff();\n    }\n  \n\n\n\n  return(\n    <Dialog open={props.updateOn} onClose={props.updateOff} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            I want to update the birdy.\n          </DialogContentText>\n    <Container>\n    <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"Species\"\n                name=\"species\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                onChange={(e) => setEditSpecies(e.target.value)}\n                value={editSpecies}\n                id=\"species\"\n                label=\"Species\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"location\"\n                label=\"Location\"\n                onChange={(e) => setEditLocation(e.target.value)}\n                value={editLocation}\n                name=\"location\"\n                autoComplete=\"location\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                label=\"Date\"\n                type=\"date\"\n                InputLabelProps={{\n                shrink: true,\n                }}\n                onChange={(e) => setEditDate(e.target.value)}\n                name='date'\n                value={editDate}\n                autoComplete=\"date\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"time\"\n                type=\"time\"\n                InputLabelProps={{\n                shrink: true,\n                }}\n                inputProps={{\n                step: 300, // 5 min\n                }}\n                onChange={(e) => setEditTime(e.target.value)}\n                value={editTime}\n                label=\"Time\"\n                id=\"time\"\n                autoComplete=\"time\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"rarity\"\n                onChange={(e) => setEditRarity(e.target.value)}\n                value={editRarity}\n                label=\"Rarity\"\n                id=\"rarity\"\n                autoComplete=\"rarity\"\n                >\n                  <MenuItem value={1}>Common</MenuItem>\n                  <MenuItem value={2}>Uncommon</MenuItem>\n                  <MenuItem value={3}>Rare</MenuItem>\n                  <MenuItem value={4}>Very Rare</MenuItem>\n                  <MenuItem value={5}>Legendary</MenuItem>\n                </Select>\n              \n            </Grid>\n            <Grid item xs={12}>\n            <FormControlLabel\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"secret\"\n                onChange={(e) => setEditSecret(e.target.value)}\n                value={editSecret}\n                label=\"Would you like this entry to be private?\"\n                id=\"secret\"\n                autoComplete=\"secret\"\n                control={<Checkbox value=\"Yes\" color=\"primary\" />}\n          /> \n            </Grid>\n          </Grid>\n    </Container>\n    </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Update\n          </Button>\n                 </DialogActions>\n      </Dialog>\n  );};\n\nexport default BirdEdit;"]},"metadata":{},"sourceType":"module"}