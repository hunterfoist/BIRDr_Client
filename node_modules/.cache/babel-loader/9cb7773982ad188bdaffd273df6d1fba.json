{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdImageUpload.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CLOUD_URL = 'https://api.cloudinary.com/v1.1/birdr/image/upload';\n\nconst ImageUpload = props => {\n  _s();\n\n  const [avUrl, setAvUrl] = useState('#');\n\n  const handleSubmit = async e => {\n    e.preventDevault();\n    const response = await fetch('http://localhost:3040/u/cloudsign', {\n      method: 'GET',\n      headers: {\n        'Authorization': props.updateToken\n      }\n    });\n    const {\n      sig,\n      ts\n    } = await response.json();\n    const file = document.getElementById('file-input').files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('upload_preset', 'cloudinary-birdr');\n    formData.append('api_key', '748883662632623');\n    formData.append('signature', sig);\n    formData.append('timestamp', ts);\n    const results = await (await fetch(CLOUD_URL, {\n      method: 'POST',\n      body: formData\n    })).json();\n    console.log();\n    const final = await (await fetch('http://localhost:3000/u/imageset', {\n      method: 'PUT',\n      headers: {\n        'Authorization': props.updateToken,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        url: results.secure_url\n      })\n    })).json();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        encType: \"multipart/form-data\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-input\",\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Upload Image!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avUrl,\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n};\n\n_s(ImageUpload, \"bvutARFZSEan23wa58JMeWKF/eE=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdImageUpload.jsx"],"names":["useState","CLOUD_URL","ImageUpload","props","avUrl","setAvUrl","handleSubmit","e","preventDevault","response","fetch","method","headers","updateToken","sig","ts","json","file","document","getElementById","files","formData","FormData","append","results","body","console","log","final","JSON","stringify","url","secure_url"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,SAAS,GAAG,oDAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,GAAD,CAAlC;;AAEA,QAAMM,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAEJ,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC9DC,MAAAA,MAAM,EAAE,KADsD;AAE9DC,MAAAA,OAAO,EAAE;AACL,yBAAiBT,KAAK,CAACU;AADlB;AAFqD,KAAtC,CAA5B;AAOA,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAc,MAAMN,QAAQ,CAACO,IAAT,EAA1B;AAEA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC,CAA4C,CAA5C,CAAb;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AACAI,IAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,kBAAjC;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,iBAA3B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BT,GAA7B;AACAO,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BR,EAA7B;AAEA,UAAMS,OAAO,GAAG,MAAM,CAAC,MAAMd,KAAK,CAACT,SAAD,EAAY;AAC1CU,MAAAA,MAAM,EAAE,MADkC;AAE1Cc,MAAAA,IAAI,EAAEJ;AAFoC,KAAZ,CAAZ,EAGlBL,IAHkB,EAAtB;AAKAU,IAAAA,OAAO,CAACC,GAAR;AAIA,UAAMC,KAAK,GAAG,MAAM,CAAC,MAAMlB,KAAK,CAAE,kCAAF,EAAsC;AAClEC,MAAAA,MAAM,EAAE,KAD0D;AAElEC,MAAAA,OAAO,EAAE;AACL,yBAAiBT,KAAK,CAACU,WADlB;AAEL,wBAAgB;AAFX,OAFyD;AAMlEY,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,GAAG,EAAEP,OAAO,CAACQ;AAAf,OAAf;AAN4D,KAAtC,CAAZ,EAOhBhB,IAPgB,EAApB;AASA,wBACI;AAAA,8BACI;AAAM,QAAA,OAAO,EAAC,qBAAd;AAAoC,QAAA,QAAQ,EAAEV,YAA9C;AAAA,gCACI;AAAO,UAAA,EAAE,EAAC,YAAV;AAAuB,UAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,GAAG,EAAEF,KAAV;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,oBADJ;AASH,GAhDG;AAgDF,CApDF;;GAAMF,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react'\n\nconst CLOUD_URL = 'https://api.cloudinary.com/v1.1/birdr/image/upload'\n\nconst ImageUpload = (props) => {\n\n    const [avUrl, setAvUrl] = useState('#')\n\n    const handleSubmit = async (e) => {\n        e.preventDevault()\n\n    const response = await fetch('http://localhost:3040/u/cloudsign', {\n        method: 'GET',\n        headers: {\n            'Authorization': props.updateToken\n        }\n    })\n\n    const { sig, ts } = await response.json()\n\n    const file = document.getElementById('file-input').files[0]\n    const formData = new FormData()\n\n    formData.append('file', file)\n    formData.append('upload_preset', 'cloudinary-birdr')\n    formData.append('api_key', '748883662632623')\n    formData.append('signature', sig)\n    formData.append('timestamp', ts)\n\n    const results = await (await fetch(CLOUD_URL, {\n        method: 'POST',\n        body: formData\n    })).json()\n\n    console.log()\n    \n    \n\n    const final = await (await fetch ('http://localhost:3000/u/imageset', {\n        method: 'PUT',\n        headers: {\n            'Authorization': props.updateToken,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ url: results.secure_url })\n    })).json()\n\n    return (\n        <>\n            <form encType=\"multipart/form-data\" onSubmit={handleSubmit}>\n                <input id=\"file-input\" type=\"file\" />\n                <button>Upload Image!</button>\n            </form>\n            <img src={avUrl} alt=\"avatar\" />\n        </>\n    )\n}}\n\nexport default ImageUpload"]},"metadata":{},"sourceType":"module"}