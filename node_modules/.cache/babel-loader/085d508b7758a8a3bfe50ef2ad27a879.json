{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BirdCreate = props => {\n  _s();\n\n  const [species, setSpecies] = useState('');\n  const [location, setLocation] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [rarity, setRarity] = useState('');\n  const [image_url, setImage_url] = useState('');\n  const [secret, setSecret] = useState(''); // const triggerSpeciesInputChange = event => setSpecies(event.target.value);\n  // const triggerLocationInputChange = event => setLocation(event.target.value);\n  // const triggerDateInputChange = event => setDate(event.target.value);\n  // const triggerTimeInputChange = event => setTime(event.target.value);\n  // const triggerRarityInputChange = event => setRarity(event.target.value);\n  // const triggerSecretInputChange = event => setSecret(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch('http://localhost:3000/log/createlog', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({\n        log: {\n          species: species,\n          location: location,\n          date: date,\n          time: time,\n          rarity: rarity,\n          image_url: image_url,\n          secret: secret\n        }\n      })\n    }).then(response => response.json()).then(logData => {\n      console.table(logData);\n      setSpecies('');\n      setLocation('');\n      setDate('');\n      setTime('');\n      setRarity('');\n      setImage_url('');\n      setSecret('');\n      props.fetchBirds();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create an Entry!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoComplete: \"Species\",\n            name: \"species\",\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            onChange: e => setSpecies(e.target.value),\n            value: species,\n            id: \"species\",\n            label: \"Species\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"location\",\n            label: \"Location\",\n            onChange: e => setLocation(e.target.value),\n            value: location,\n            name: \"location\",\n            autoComplete: \"location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"date\",\n            label: \"Date\",\n            onChange: e => setDate(e.target.value),\n            name: \"date\",\n            value: date,\n            autoComplete: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"time\",\n            onChange: e => setTime(e.target.value),\n            value: time,\n            label: \"Time\",\n            id: \"time\",\n            autoComplete: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"rarity\",\n            onChange: e => setRarity(e.target.value),\n            value: rarity,\n            label: \"Rarity\",\n            id: \"rarity\",\n            autoComplete: \"rarity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"image\",\n            onChange: e => setImage_url(e.target.value),\n            value: image_url,\n            label: \"Image\",\n            id: \"image\",\n            autoComplete: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            name: \"secret\",\n            onChange: e => setSecret(e.target.value),\n            value: secret,\n            label: \"Secret\",\n            id: \"secret\",\n            autoComplete: \"secret\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: handleSubmit,\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Create Log!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BirdCreate, \"kuGz/6vzm2VGrwUJqk6t2qLLBRs=\");\n\n_c = BirdCreate;\nexport default BirdCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdCreate\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdCreate.jsx"],"names":["React","useState","Button","TextField","Grid","Box","Typography","Container","BirdCreate","props","species","setSpecies","location","setLocation","date","setDate","time","setTime","rarity","setRarity","image_url","setImage_url","secret","setSecret","handleSubmit","event","preventDefault","fetch","method","headers","Headers","token","body","JSON","stringify","log","then","response","json","logData","console","table","fetchBirds","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nconst BirdCreate = props => {\n  const [ species, setSpecies ] = useState('');\n  const [ location, setLocation ] = useState('');\n  const [ date, setDate ] = useState('');\n  const [ time, setTime ] = useState('');\n  const [ rarity, setRarity ] = useState('');\n  const [ image_url, setImage_url] = useState('');\n  const [ secret, setSecret ] = useState('');\n\n  // const triggerSpeciesInputChange = event => setSpecies(event.target.value);\n  // const triggerLocationInputChange = event => setLocation(event.target.value);\n  // const triggerDateInputChange = event => setDate(event.target.value);\n  // const triggerTimeInputChange = event => setTime(event.target.value);\n  // const triggerRarityInputChange = event => setRarity(event.target.value);\n  // const triggerSecretInputChange = event => setSecret(event.target.value);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch('http://localhost:3000/log/createlog', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({ log: { species: species, location: location, date: date, time: time, rarity: rarity, image_url: image_url, secret: secret } })\n    })\n    .then(response => response.json())\n    .then(logData => {\n      console.table(logData);\n      setSpecies('');\n      setLocation('');\n      setDate('');\n      setTime('');\n      setRarity('');\n      setImage_url('');\n      setSecret('');\n      props.fetchBirds();\n    })\n  }\n\n  return(\n    <>\n    <h3>Create an Entry!</h3>\n    <Container>\n    <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"Species\"\n                name=\"species\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                \n                onChange={(e) => setSpecies(e.target.value)}\n                value={species}\n                id=\"species\"\n                label=\"Species\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"location\"\n                label=\"Location\"\n                onChange={(e) => setLocation(e.target.value)}\n                value={location}\n                name=\"location\"\n                autoComplete=\"location\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                label=\"Date\"\n                onChange={(e) => setDate(e.target.value)}\n                name='date'\n                value={date}\n                autoComplete=\"date\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"time\"\n                onChange={(e) => setTime(e.target.value)}\n                value={time}\n                label=\"Time\"\n                id=\"time\"\n                autoComplete=\"time\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"rarity\"\n                onChange={(e) => setRarity(e.target.value)}\n                value={rarity}\n                label=\"Rarity\"\n                id=\"rarity\"\n                autoComplete=\"rarity\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"image\"\n                onChange={(e) => setImage_url(e.target.value)}\n                value={image_url}\n                label=\"Image\"\n                id=\"image\"\n                autoComplete=\"image\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"secret\"\n                onChange={(e) => setSecret(e.target.value)}\n                value={secret}\n                label=\"Secret\"\n                id=\"secret\"\n                autoComplete=\"secret\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            onClick={handleSubmit}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Create Log!\n          </Button>\n    </Container>\n    </>\n  );\n};\nexport default BirdCreate;"]},"metadata":{},"sourceType":"module"}