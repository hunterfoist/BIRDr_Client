{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BirdEdit = props => {\n  _s();\n\n  const [editSpecies, setEditSpecies] = useState(props.birdToUpdate.description);\n  const [editLocation, setEditLocation] = useState(props.birdToUpdate.definition);\n  const [editTime, setEditTime] = useState(props.birdToUpdate.result);\n  const [editDate, setEditDate] = useState(props.birdToUpdate.result);\n  const [editRarity, setEditRarity] = useState(props.birdToUpdate.result);\n  const [editSecret, setEditSecret] = useState(props.birdToUpdate.result);\n\n  const birdUpdate = (event, bird) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/updatelog/${props.birdToUpdate.id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({\n        log: {\n          species: editSpecies,\n          location: editLocation,\n          time: editTime,\n          date: editDate,\n          rarity: editRarity,\n          secret: editSecret\n        }\n      })\n    }).then(response => {\n      props.fetchBirds();\n      props.updateOff();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoComplete: \"Species\",\n          name: \"species\",\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          onChange: e => setSpecies(e.target.value),\n          value: species,\n          id: \"species\",\n          label: \"Species\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          id: \"location\",\n          label: \"Location\",\n          onChange: e => setLocation(e.target.value),\n          value: location,\n          name: \"location\",\n          autoComplete: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          id: \"date\",\n          label: \"Date\",\n          onChange: e => setDate(e.target.value),\n          name: \"date\",\n          value: date,\n          autoComplete: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          name: \"time\",\n          onChange: e => setTime(e.target.value),\n          value: time,\n          label: \"Time\",\n          id: \"time\",\n          autoComplete: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          name: \"rarity\",\n          onChange: e => setRarity(e.target.value),\n          value: rarity,\n          label: \"Rarity\",\n          id: \"rarity\",\n          autoComplete: \"rarity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          required: true,\n          fullWidth: true,\n          name: \"secret\",\n          onChange: e => setSecret(e.target.value),\n          value: secret,\n          label: \"Secret\",\n          id: \"secret\",\n          autoComplete: \"secret\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Create Log!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BirdEdit, \"/Gb27+k2SBfGG20s90Cq58OlgtQ=\");\n\n_c = BirdEdit;\nexport default BirdEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdEdit\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdEdit.jsx"],"names":["React","useState","Button","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","BirdEdit","props","editSpecies","setEditSpecies","birdToUpdate","description","editLocation","setEditLocation","definition","editTime","setEditTime","result","editDate","setEditDate","editRarity","setEditRarity","editSecret","setEditSecret","birdUpdate","event","bird","preventDefault","fetch","id","method","headers","Headers","token","body","JSON","stringify","log","species","location","time","date","rarity","secret","then","response","fetchBirds","updateOff","e","setSpecies","target","value","setLocation","setDate","setTime","setRarity","setSecret","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst BirdEdit = props => {\n\n  const [ editSpecies, setEditSpecies ] = useState(props.birdToUpdate.description);\n  const [ editLocation, setEditLocation ] = useState(props.birdToUpdate.definition);\n  const [ editTime, setEditTime ] = useState(props.birdToUpdate.result);\n\n  const [ editDate, setEditDate ] = useState(props.birdToUpdate.result);\n  const [ editRarity, setEditRarity ] = useState(props.birdToUpdate.result);\n  const [ editSecret, setEditSecret ] = useState(props.birdToUpdate.result);\n\n  const birdUpdate = (event, bird) => {\n    event.preventDefault();\n    fetch(`http://localhost:3000/updatelog/${props.birdToUpdate.id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      }),\n      body: JSON.stringify({log: { species: editSpecies, location: editLocation, time: editTime, date: editDate, rarity: editRarity, secret: editSecret }})\n    })\n    .then(response => {\n      props.fetchBirds();\n      props.updateOff();\n    })\n  };\n\n  return(\n    <Container>\n    <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"Species\"\n                name=\"species\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                \n                onChange={(e) => setSpecies(e.target.value)}\n                value={species}\n                id=\"species\"\n                label=\"Species\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"location\"\n                label=\"Location\"\n                onChange={(e) => setLocation(e.target.value)}\n                value={location}\n                name=\"location\"\n                autoComplete=\"location\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"date\"\n                label=\"Date\"\n                onChange={(e) => setDate(e.target.value)}\n                name='date'\n                value={date}\n                autoComplete=\"date\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"time\"\n                onChange={(e) => setTime(e.target.value)}\n                value={time}\n                label=\"Time\"\n                id=\"time\"\n                autoComplete=\"time\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"rarity\"\n                onChange={(e) => setRarity(e.target.value)}\n                value={rarity}\n                label=\"Rarity\"\n                id=\"rarity\"\n                autoComplete=\"rarity\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"secret\"\n                onChange={(e) => setSecret(e.target.value)}\n                value={secret}\n                label=\"Secret\"\n                id=\"secret\"\n                autoComplete=\"secret\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            onClick={handleSubmit}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Create Log!\n          </Button>\n    </Container>\n  );\n};\n\nexport default BirdEdit;"]},"metadata":{},"sourceType":"module"}