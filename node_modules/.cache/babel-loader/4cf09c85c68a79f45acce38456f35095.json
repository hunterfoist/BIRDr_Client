{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdLog.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport BirdEdit from './BirdEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nconst BirdLog = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deleteBird = bird => {\n    fetch(`http://localhost:3000/log/deletelog/${bird.id}`, {\n      method: 'DELETE',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      })\n    }).then(() => props.fetchBirds());\n  };\n\n  const birdMapper = () => {\n    return props.birds.map((bird, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: /*#__PURE__*/_jsxDEV(TableBody, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: bird.species\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: bird.location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: bird.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: bird.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: bird.rarity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: bird.secret\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"warning\",\n                    onClick: () => {\n                      props.editUpdateBird(bird);\n                      handleClickOpen();\n                      props.updateOn();\n                    },\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"danger\",\n                    onClick: () => deleteBird(bird),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 11\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Bird History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      alignItem: \"top\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: birdMapper()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BirdLog, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = BirdLog;\nexport default BirdLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdLog\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdLog.jsx"],"names":["React","Button","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","BirdEdit","useStyles","table","minWidth","BirdLog","props","open","setOpen","useState","handleClickOpen","handleClose","deleteBird","bird","fetch","id","method","headers","Headers","token","then","fetchBirds","birdMapper","birds","map","index","species","location","time","date","rarity","secret","editUpdateBird","updateOn"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport BirdEdit from './BirdEdit';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n\n  const BirdLog = props => {\n\n  const [open, setOpen] = React.useState(false);\n  \n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const deleteBird = bird => {\n\n\n    fetch(`http://localhost:3000/log/deletelog/${bird.id}`, {\n\n\n      method: 'DELETE',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      })\n    })\n    .then(() => props.fetchBirds())\n  };\n\n  const birdMapper = () => {\n    return props.birds.map((bird, index) => {\n      return(\n        <div>\n        <TableContainer component={Paper}>\n          <Table>\n        <TableBody>\n        <TableRow key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                {bird.species}</TableCell>\n          <TableCell>{bird.location}</TableCell>\n          <TableCell>{bird.time}</TableCell>\n          <TableCell>{bird.date}</TableCell>\n          <TableCell>{bird.rarity}</TableCell>\n          <TableCell>{bird.secret}</TableCell>\n          <TableCell>\n            <Button color=\"warning\" onClick={() => {props.editUpdateBird(bird); handleClickOpen(); props.updateOn()}} >Update</Button>\n            <Button color=\"danger\" onClick={() => deleteBird(bird)}>Delete</Button>\n          </TableCell>\n        </TableRow>\n        </TableBody>\n        </Table>\n        </TableContainer>\n        </div>\n      );\n    });\n  };\n  \n  return(\n    <>\n      <h3>Bird History</h3>\n      \n      <Table alignItem=\"top\">\n        <tbody>\n          {birdMapper()}\n        </tbody>\n      </Table>\n    </>\n  );\n};\nexport default BirdLog;"]},"metadata":{},"sourceType":"module"}