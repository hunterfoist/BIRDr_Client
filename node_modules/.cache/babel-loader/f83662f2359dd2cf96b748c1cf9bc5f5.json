{"ast":null,"code":"var _jsxFileName = \"/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdNest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport BirdCreate from './BirdCreate';\nimport BirdLog from './BirdLog';\nimport BirdEdit from './BirdEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BirdNest = props => {\n  _s();\n\n  const [birds, setBirds] = useState([]);\n  const [updateActive, setUpdateActive] = useState(false);\n  const [birdToUpdate, setBirdToUpdate] = useState({});\n\n  const fetchBirds = () => {\n    fetch('http://localhost:3000/log/getlogs', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      })\n    }).then(response => response.json()).then(logData => setBirds(logData));\n  };\n\n  const editUpdateBird = bird => {\n    setBirdToUpdate(bird);\n    console.log(bird);\n  };\n\n  const updateOn = () => setUpdateActive(true);\n\n  const updateOff = () => setUpdateActive(false);\n\n  useEffect(() => fetchBirds(), []);\n\n  function displayCards() {\n    return birds.length > 0 ? birds.map(bird => /*#__PURE__*/_jsxDEV(BirdLog, {\n      bird: bird,\n      birds: birds,\n      editUpdateBird: editUpdateBird,\n      updateOn: updateOn,\n      fetchBirds: fetchBirds,\n      token: props.token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 51\n    }, this)) : null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: \"3\",\n        children: /*#__PURE__*/_jsxDEV(BirdCreate, {\n          fetchBirds: fetchBirds,\n          token: props.token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: \"9\",\n        alignItems: \"flex-start\",\n        children: [displayCards(), updateActive ? /*#__PURE__*/_jsxDEV(BirdEdit, {\n          birdToUpdate: birdToUpdate,\n          updateOn: updateOn,\n          updateOff: updateOff,\n          token: props.token,\n          fetchBirds: fetchBirds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BirdNest, \"sFEReXqQwNAbKKqfHLlfUbPHOrc=\");\n\n_c = BirdNest;\nexport default BirdNest;\n\nvar _c;\n\n$RefreshReg$(_c, \"BirdNest\");","map":{"version":3,"sources":["/Users/evawalls/Documents/Minority_Report/BIRDr/BIRDr_Client/src/components/BirdNest.jsx"],"names":["React","useState","useEffect","Container","Grid","BirdCreate","BirdLog","BirdEdit","BirdNest","props","birds","setBirds","updateActive","setUpdateActive","birdToUpdate","setBirdToUpdate","fetchBirds","fetch","method","headers","Headers","token","then","response","json","logData","editUpdateBird","bird","console","log","updateOn","updateOff","displayCards","length","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport BirdCreate from './BirdCreate';\nimport BirdLog from './BirdLog';\nimport BirdEdit from './BirdEdit';\n\nconst BirdNest = props => {\n\n  const [ birds, setBirds ] = useState([]);\n  const [ updateActive, setUpdateActive ] = useState(false);\n  const [ birdToUpdate, setBirdToUpdate ] = useState({});\n\n  const fetchBirds = () => {\n    fetch('http://localhost:3000/log/getlogs', {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      })\n    })\n    .then(response => response.json())\n    .then(logData => setBirds(logData));\n  };\n\n  const editUpdateBird = bird => {\n    setBirdToUpdate(bird);\n    console.log(bird);\n  };\n\n  const updateOn = () => setUpdateActive(true);\n\n  const updateOff = () => setUpdateActive(false);\n\n  useEffect(() => fetchBirds(), [])\n\n  function displayCards() {\n    return birds.length > 0 ? birds.map((bird) => <BirdLog bird={bird} birds={birds} editUpdateBird={editUpdateBird} updateOn={updateOn} fetchBirds={fetchBirds} token={props.token} />) : null;\n}\n\n\n  return(\n    <Container flexDirection=\"row\" alignItems=\"flex-start\">\n     <Grid container xs={12}>\n        <Grid container item xs=\"3\">\n          <BirdCreate fetchBirds={fetchBirds} token={props.token} />\n        </Grid>\n        <Grid container item xs=\"9\" alignItems=\"flex-start\">\n          {displayCards()}\n        {/* <BirdLog birds={birds} editUpdateBird={editUpdateBird} updateOn={updateOn} fetchBirds={fetchBirds} token={props.token} />  */}\n          {updateActive ? <BirdEdit birdToUpdate={birdToUpdate} updateOn={updateOn} updateOff={updateOff} token={props.token} fetchBirds={fetchBirds}/> : <></>}\n        </Grid>\n        </Grid>\n\n    </Container>\n  );\n};\n\nexport default BirdNest;\n\n"]},"metadata":{},"sourceType":"module"}